

upstream backend_app_geoserver {
    server backend:5000;
    server geoserver:8080;
}

server {

        # support http and ipv6
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    # support https and ipv6
    listen 443 default_server ssl;
    listen [::]:443 ipv6only=on default_server ssl;

    server_name localhost;
    # location of react build files
    root /usr/share/nginx/html/;

    # index html from react build to serve
    index index.html;

    ssl_certificate     /etc/nginx/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/certs/nginx-selfsigned.key;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;


    # ONLY KUBERNETES RELEVANT: endpoint for health checkup
    location /health {
        proxy_pass http://backend_app_geoserver;
        return 200 "health ok";
    }

    # ONLY KUBERNETES RELEVANT: endpoint for readiness checkup
    location /ready {
        return 200 "ready";
    }

    # html file to serve with / endpoint
    location / {
        try_files $uri /index.html;
    }

    location /v1 {
        client_max_body_size 10m;
        add_header 'Access-Control-Allow-Origin' https://backend_app_geoserver;
        proxy_pass http://backend_app_geoserver;
    }

    location /v1/doc {
        client_max_body_size 10m;
        add_header 'Access-Control-Allow-Origin' https://backend_app_geoserver;
        proxy_pass http://backend_app_geoserver;
    }

    location /geoserver {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://backend_app_geoserver;
    }

}
